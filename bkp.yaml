clusterName: "akashplay"

# For agents, point to the deployment service
otelCollectorEndpoint: "akash-k8s-infra-otel-deployment.signoz.svc.cluster.local:4317"
otelInsecure: true  # Internal traffic can be insecure

# Don't set API key globally (only deployment needs it)
signozApiKey: ""

presets:
  otlpExporter:
    enabled: true
  kubernetesAttributes:
    enabled: true
  clusterMetrics:
    enabled: true
  kubeletMetrics:
    enabled: true

# OtelAgent configuration
otelAgent:
  enabled: true
  # Agent doesn't need any additional env vars - it uses the global otelCollectorEndpoint

# OtelDeployment configuration  
otelDeployment:
  enabled: true
  
  # Override the endpoint ONLY for the deployment
  additionalEnvs:
    OTEL_EXPORTER_OTLP_ENDPOINT:
      value: "ingest.in.signoz.cloud:4317"  # This should point to SigNoz Cloud
    SIGNOZ_API_KEY:
      value: "NocI-rb0fGk8GnqOiQE0beyiv7JFTNWZe9yp"
    OTEL_EXPORTER_OTLP_INSECURE:
      value: "false"  # SigNoz Cloud uses TLS
  
  # Add OTLP receiver ports
  ports:
    otlp:
      enabled: true
      containerPort: 4317
      servicePort: 4317
      protocol: TCP
    otlp-http:
      enabled: true
      containerPort: 4318
      servicePort: 4318
      protocol: TCP
  
  # Override the entire config
  config:
    receivers:
      otlp:
        protocols:
          grpc:
            endpoint: 0.0.0.0:4317
          http:
            endpoint: 0.0.0.0:4318
      k8s_cluster:
        auth_type: serviceAccount
        collection_interval: 30s
        metrics:
          k8s.pod.phase:
            enabled: true
          k8s.pod.status_reason:
            enabled: true
        node_conditions_to_report:
        - Ready
        - MemoryPressure
        - DiskPressure
        - PIDPressure
        - NetworkUnavailable
        resource_attributes:
          container.runtime:
            enabled: true
          container.runtime.version:
            enabled: true
          k8s.container.status.last_terminated_reason:
            enabled: true
          k8s.kubelet.version:
            enabled: true
          k8s.pod.qos_class:
            enabled: true
      k8s_events:
        auth_type: serviceAccount
      prometheus:
        config:
          scrape_configs:
          - job_name: 'kube-state-metrics'
            static_configs:
            - targets: ['kube-state-metrics.kube-system.svc.cluster.local:8080']
            scrape_interval: 30s
            metrics_path: /metrics
    
    processors:
      batch:
        send_batch_size: 10000
        timeout: 1s
      k8sattributes:
        extract:
          metadata:
          - k8s.namespace.name
          - k8s.deployment.name
          - k8s.statefulset.name
          - k8s.daemonset.name
          - k8s.cronjob.name
          - k8s.job.name
          - k8s.node.name
          - k8s.node.uid
          - k8s.pod.name
          - k8s.pod.uid
          - k8s.pod.start_time
        passthrough: false
        pod_association:
        - sources:
          - from: resource_attribute
            name: k8s.pod.ip
        - sources:
          - from: resource_attribute
            name: k8s.pod.uid
        - sources:
          - from: connection
      resourcedetection:
        detectors:
        - env
        override: false
        timeout: 2s
    
    exporters:
      otlp:
        endpoint: ${env:OTEL_EXPORTER_OTLP_ENDPOINT}
        headers:
          signoz-access-token: ${env:SIGNOZ_API_KEY}
        tls:
          insecure: ${env:OTEL_EXPORTER_OTLP_INSECURE}
          insecure_skip_verify: ${env:OTEL_EXPORTER_OTLP_INSECURE_SKIP_VERIFY}
    
    extensions:
      health_check:
        endpoint: 0.0.0.0:13133
      pprof:
        endpoint: localhost:1777
      zpages:
        endpoint: localhost:55679
    
    service:
      extensions:
      - health_check
      - zpages
      - pprof
      pipelines:
        metrics:
          receivers: [otlp, k8s_cluster, prometheus]
          processors: [k8sattributes, resourcedetection, batch]
          exporters: [otlp]
        traces:
          receivers: [otlp]
          processors: [k8sattributes, resourcedetection, batch]
          exporters: [otlp]
        logs:
          receivers: [otlp, k8s_events]
          processors: [k8sattributes, resourcedetection, batch]
          exporters: [otlp]
      telemetry:
        logs:
          encoding: json
        metrics:
          address: 0.0.0.0:8888